{"name":"Gulp-cmd","tagline":"A gulp plugin for cmd transport and concat","body":"gulp-cmd\r\n=========\r\n\r\n>A gulp plugin for cmd transport and concat\r\n\r\n>[![Dependencies][david-image]][david-url]\r\n\r\n[david-image]: http://img.shields.io/david/nuintun/gulp-cmd.svg?style=flat-square\r\n[david-url]: https://david-dm.org/nuintun/gulp-cmd\r\n\r\n###Usage\r\n```js\r\nvar path = require('path');\r\nvar join = path.join;\r\nvar relative = path.relative;\r\nvar gulp = require('gulp');\r\nvar cmd = require('gulp-cmd');\r\nvar alias = {\r\n  'import-style': 'util/import-style/1.0.0/import-style'\r\n};\r\n\r\n// Fixed css resource path\r\nfunction onpath(path, property, file, wwwroot){\r\n  if (/^[^./\\\\]/.test(path)) {\r\n    path = './' + path;\r\n  }\r\n\r\n  if (path.indexOf('.') === 0) {\r\n    path = join(dirname(file), path);\r\n    path = relative(wwwroot, path);\r\n    path = '/' + path;\r\n    path = path.replace(/\\\\+/g, '/');\r\n  }\r\n\r\n  path = path.replace('assets/', 'online/');\r\n\r\n  return path;\r\n}\r\n\r\n// Task\r\ngulp.task('default', function (){\r\n  gulp.src('assets/js/**/*.js', { base: 'assets/js' })\r\n    .pipe(cmd({\r\n      alias: alias,\r\n      ignore: ['jquery'],\r\n      include: function (id){\r\n        return id.indexOf('view') === 0 ? 'all' : 'self';\r\n      },\r\n      css: { onpath: onpath }\r\n    }))\r\n    .pipe(gulp.dest('online/js'));\r\n});\r\n```\r\n\r\n###API\r\n####cmd(options)\r\n#####  *options*\r\n- map ```Array```\r\n  \r\n  配置模块ID路径映射修改，可用于路径转换。\r\n  \r\n- vars ```Object```\r\n  \r\n  模块路径在运行时才能确定，这时可以使用 vars 变量来配置。\r\n\r\n- paths ```Object```\r\n  \r\n  当目录比较深，或需要跨目录调用模块时，可以使用 paths 来简化书写。\r\n\r\n- alias ```Object```\r\n  \r\n  当模块标识很长时，可以使用 alias 来简化。\r\n>注意：*[import-style](https://github.com/nuintun/import-style) 为内置样式加载模块，建议配置 alias 以便正确的转换该模块，该模块需要自己下载并放入相应目录。 vars paths alias 可参考 [seajs](https://github.com/seajs/seajs/issues/262) 的配置*\r\n\r\n- cache ```Boolean```\r\n  \r\n  文件内存缓存，转换完成的文件会暂时存储在内存中以便提升转换效率。\r\n\r\n- wwwroot ```String```\r\n  \r\n  网站根目录配置，路径相对于 ```gulpfile.js``` 目录。\r\n\r\n- idleading ```String|Function```\r\n  \r\n  模块 id 转换模板，默认 ```{{name}}/{{version}}/{{file}}```， 三个变量由 vinyl 文件的 relative 属性转换而来，所以 gulp.src 的 [base](https://github.com/wearefractal/vinyl) 参数必须设置，base 等同于 seajs 的 [base](https://github.com/seajs/seajs/issues/262) 配置。\r\n\r\n- rename ```Object|Function```\r\n  \r\n  重命名文件，有 ```debug``` 和 ```min``` 两个配置可选，打开后文件名会自动添加 -debug 和 -min 后缀，debug 打开时 min 配置无效。当 rename 是函数的时候要返回 ```{ prefix: '', suffix: '' }``` 格式的对象，分别对应前缀和后缀。\r\n\r\n- plugins ```Object```\r\n  \r\n  文件转换插件，可以覆写默认插件，也可定义新插件，匹配的 ```vinyl``` 文件会经过插件的转换函数，插件名字必须为不包含 ```.``` 文件扩展名。\r\n\r\n- include ```String```\r\n  \r\n  模块封装模式，默认 ```relative```，可选 ```all``` 和 ```self```。分别对应：（1）合并相对依赖文件。（2）合并所有依赖文件。（3）不合并任何文件。\r\n\r\n- css ```Object```\r\n  \r\n  转换 css 到 js 的配置，有 ```onpath``` 和 ```prefix``` 两个配置可选，配置类型为 ```String|Function```，对应 css 文件的资源文件路径处理和类名前缀。\r\n\r\n- ignore ```Array```\r\n  \r\n  模块合并需要忽略的依赖模块，支持路径和 vars paths alias 配置，不支持相对路径（默认忽略），以 ```/``` 开头的路径按照 wwwroot 寻找， 其他按照 base 寻找。\r\n\r\n>注意事项：*模块 id 以 ```/``` 结尾会默认用 ```index.js``` 或者 ```index.css``` 补全*， id 以 ```/``` 开头的模块会从 wwwroot 路径寻找。id 规则简化，所有 id 都会自动补全 js 后缀，和 seajs 的[模块标识](https://github.com/seajs/seajs/issues/258)中的 *文件后缀的自动添加规则* 有点区别，但不会破坏 seajs 的规则，只是相应模块不会做处理和合并。css 的 import 规则和原生一致，需要注意的是尽量不要引入远程资源。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}